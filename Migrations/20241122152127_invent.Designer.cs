// <auto-generated />
using System;
using Clgproject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clgproject.Migrations
{
    [DbContext(typeof(ClgDbContext))]
    [Migration("20241122152127_invent")]
    partial class invent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clgproject.Models.CustTrans.Cust_Transaction", b =>
                {
                    b.Property<int>("t_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("t_id"));

                    b.Property<string>("mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("t_id");

                    b.ToTable("cust_Transactions");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.Customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_id"));

                    b.Property<int>("Cust_Transaction_id")
                        .HasColumnType("int");

                    b.Property<string>("account_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cust_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customer_id");

                    b.HasIndex("Cust_Transaction_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.OrderC", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<int>("Supplier_id")
                        .HasColumnType("int");

                    b.Property<float>("cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("date_of_order")
                        .HasColumnType("datetime2");

                    b.Property<string>("o_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("order_id");

                    b.HasIndex("Supplier_id");

                    b.ToTable("C_orders");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.ReceiveCOrder", b =>
                {
                    b.Property<int>("receive_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("receive_id"));

                    b.Property<int>("Order_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("receive_datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("receive_id");

                    b.HasIndex("Order_id");

                    b.ToTable("receiveCOrders");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.ReturnCOrder", b =>
                {
                    b.Property<int>("return_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("return_id"));

                    b.Property<int>("Order_id")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_of_order")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_of_return")
                        .HasColumnType("datetime2");

                    b.Property<string>("t_return")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("return_id");

                    b.HasIndex("Order_id");

                    b.ToTable("returnCOrders");
                });

            modelBuilder.Entity("Clgproject.Models.MainSuppliers.MainSupplier", b =>
                {
                    b.Property<int>("mainsupp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mainsupp_id"));

                    b.Property<int>("MainTransactionId")
                        .HasColumnType("int");

                    b.Property<string>("account_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("mainsupp_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mainsupp_contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mainsupp_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("mainsupp_id");

                    b.HasIndex("MainTransactionId");

                    b.ToTable("MainSuppliers");
                });

            modelBuilder.Entity("Clgproject.Models.MainSuppliers.SupplierHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChangedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainsuppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainsuppId");

                    b.ToTable("SupplierHistories");
                });

            modelBuilder.Entity("Clgproject.Models.MainTrans.MainTransaction", b =>
                {
                    b.Property<int>("t_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("t_id"));

                    b.Property<string>("mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("t_id");

                    b.ToTable("MainTransactions");
                });

            modelBuilder.Entity("Clgproject.Models.Products.Product", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<int>("Mainsupp_id")
                        .HasColumnType("int");

                    b.Property<float>("cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("date_of_order")
                        .HasColumnType("datetime2");

                    b.Property<string>("o_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("order_id");

                    b.HasIndex("Mainsupp_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Clgproject.Models.Products.ReceiveIOrder", b =>
                {
                    b.Property<int>("receive_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("receive_id"));

                    b.Property<int>("Order_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("receive_datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("receive_id");

                    b.HasIndex("Order_id");

                    b.ToTable("receiveIOrders");
                });

            modelBuilder.Entity("Clgproject.Models.Products.ReturnIOrder", b =>
                {
                    b.Property<int>("return_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("return_id"));

                    b.Property<int>("Order_id")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_of_order")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_of_return")
                        .HasColumnType("datetime2");

                    b.Property<string>("t_return")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("return_id");

                    b.HasIndex("Order_id");

                    b.ToTable("returnIOrders");
                });

            modelBuilder.Entity("Clgproject.Models.Suppliers.Supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.Customer", b =>
                {
                    b.HasOne("Clgproject.Models.CustTrans.Cust_Transaction", "cust_Transaction")
                        .WithMany("Customers")
                        .HasForeignKey("Cust_Transaction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cust_Transaction");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.OrderC", b =>
                {
                    b.HasOne("Clgproject.Models.Suppliers.Supplier", "supplier")
                        .WithMany("orderCs")
                        .HasForeignKey("Supplier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.ReceiveCOrder", b =>
                {
                    b.HasOne("Clgproject.Models.Customers.OrderC", "orderC")
                        .WithMany("receiveCOrders")
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orderC");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.ReturnCOrder", b =>
                {
                    b.HasOne("Clgproject.Models.Customers.OrderC", "orderC")
                        .WithMany("returnCOrders")
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orderC");
                });

            modelBuilder.Entity("Clgproject.Models.MainSuppliers.MainSupplier", b =>
                {
                    b.HasOne("Clgproject.Models.MainTrans.MainTransaction", "mainTransactions")
                        .WithMany("MainSuppliers")
                        .HasForeignKey("MainTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mainTransactions");
                });

            modelBuilder.Entity("Clgproject.Models.MainSuppliers.SupplierHistory", b =>
                {
                    b.HasOne("Clgproject.Models.MainSuppliers.MainSupplier", "MainSupplier")
                        .WithMany()
                        .HasForeignKey("MainsuppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainSupplier");
                });

            modelBuilder.Entity("Clgproject.Models.Products.Product", b =>
                {
                    b.HasOne("Clgproject.Models.MainSuppliers.MainSupplier", "mainSupplier")
                        .WithMany("products")
                        .HasForeignKey("Mainsupp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mainSupplier");
                });

            modelBuilder.Entity("Clgproject.Models.Products.ReceiveIOrder", b =>
                {
                    b.HasOne("Clgproject.Models.Products.Product", "product")
                        .WithMany("receiveIOrders")
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("Clgproject.Models.Products.ReturnIOrder", b =>
                {
                    b.HasOne("Clgproject.Models.Products.Product", "product")
                        .WithMany("returnIOrders")
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("Clgproject.Models.CustTrans.Cust_Transaction", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Clgproject.Models.Customers.OrderC", b =>
                {
                    b.Navigation("receiveCOrders");

                    b.Navigation("returnCOrders");
                });

            modelBuilder.Entity("Clgproject.Models.MainSuppliers.MainSupplier", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Clgproject.Models.MainTrans.MainTransaction", b =>
                {
                    b.Navigation("MainSuppliers");
                });

            modelBuilder.Entity("Clgproject.Models.Products.Product", b =>
                {
                    b.Navigation("receiveIOrders");

                    b.Navigation("returnIOrders");
                });

            modelBuilder.Entity("Clgproject.Models.Suppliers.Supplier", b =>
                {
                    b.Navigation("orderCs");
                });
#pragma warning restore 612, 618
        }
    }
}
